plugins {
    id 'java'
    id 'application'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    id 'com.diffplug.spotless' version '6.25.0'
    id 'net.ltgt.errorprone' version '3.1.0'
}

group 'io.github.eisopux'
version '0.2.0'

repositories {
    mavenCentral()
}

configurations {
    requireJavadoc
}

dependencies {
    implementation 'io.github.eisop:checker:3.42.0-eisop3'
    implementation 'org.eclipse.lsp4j:org.eclipse.lsp4j:0.22.0'
    implementation 'com.google.code.gson:gson:2.10.1'
    implementation 'commons-cli:commons-cli:1.7.0'
    implementation 'com.google.guava:guava:33.1.0-jre'
    testImplementation 'junit:junit:4.13.2'
    errorprone('com.google.errorprone:error_prone_core:2.27.0')
    errorproneJavac('com.google.errorprone:javac:9+181-r4173-1')
    requireJavadoc('org.plumelib:require-javadoc:1.0.9')
}

task requireJavadoc(type: JavaExec, group: 'Documentation') {
    description = 'Ensures that Javadoc documentation exists in source code.'
    mainClass = 'org.plumelib.javadoc.RequireJavadoc'
    classpath = configurations.requireJavadoc
    args 'src/main/java'
}

application {
    // Define the main class for the application
    mainClass = 'org.checkerframework.languageserver.ServerMain'
}

shadowJar {
    minimize()
    dependencies {
        // Minimize does not remove the annotated JDK, properties, and astub files
        exclude(dependency('io.github.eisop:checker'))
    }
}

tasks.compileJava {
    options.compilerArgs += ['-Xlint', '-Werror']
}

spotless {
    java {
        googleJavaFormat().aosp()
        importOrder('com', 'jdk', 'lib', 'lombok', 'org', 'java', 'javax')
        formatAnnotations()
    }
    groovyGradle {
        target '*.gradle'
        importOrder()
        greclipse()  // which formatter Spotless should use to format .gradle files.
        indentWithSpaces(4)
        trimTrailingWhitespace()
    }
}
